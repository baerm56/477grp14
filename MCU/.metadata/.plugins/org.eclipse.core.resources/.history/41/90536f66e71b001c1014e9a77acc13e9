#include "tracker.h"

volatile uint8_t[NUM_ROWS][NUM_COLS] {0};


void TrackerInit()
{
	/* Configure Column-Selecting GPIO */
    GPIO_InitTypeDef colGPIO_InitStruct = {0};

    /* GPIO Ports Clock Enable */
    __HAL_RCC_GPIOA_CLK_ENABLE();
    __HAL_RCC_GPIOC_CLK_ENABLE();

    /* Configure GPIO pin Output Level */
    HAL_GPIO_WritePin(GPIO_BUS_COL, GPIO_COL_SEL0 | GPIO_COL_SEL1 | GPIO_COL_SEL2, GPIO_PIN_RESET);

    /* Configure GPIO pins */
    colGPIO_InitStruct.Pin = GPIO_COL_SEL0 | GPIO_COL_SEL1 | GPIO_COL_SEL2;
    colGPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    colGPIO_InitStruct.Pull = GPIO_NOPULL;
    colGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIO_BUS_COL, &colGPIO_InitStruct);



    /* Enable Row-Reading GPIO */
    GPIO_InitTypeDef rowGPIO_InitStruct = {0};

	/* GPIO Ports Clock Enable */
	__HAL_RCC_GPIOD_CLK_ENABLE();

	/* Configure GPIO pin Output Level */
	HAL_GPIO_WritePin(GPIO_BUS_ROW, GPIO_ROW0 | GPIO_ROW1 | GPIO_ROW2 | GPIO_ROW3, GPIO_PIN_RESET);

	/* Configure GPIO pins */
	rowGPIO_InitStruct.Pin = GPIO_ROW0 | GPIO_ROW1 | GPIO_ROW2 | GPIO_ROW3;
	rowGPIO_InitStruct.Mode = GPIO_MODE_INPUT;
	rowGPIO_InitStruct.Pull = GPIO_PULLUP;
	rowGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	HAL_GPIO_Init(GPIO_BUS_ROW, &rowGPIO_InitStruct);
}

void Track()
{
	HAL_GPIO_WritePin(GPIO_BUS, GPIO_COL_SEL0, GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIO_BUS, GPIO_COL_SEL1, GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIO_BUS, GPIO_COL_SEL2, GPIO_PIN_RESET);


	HAL_GPIO_WritePin(GPIO_BUS_COL, GPIO_COL_SEL0, GPIO_PIN_SET);
	HAL_GPIO_WritePin(GPIO_BUS_COL, GPIO_COL_SEL1, GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIO_BUS_COL, GPIO_COL_SEL2, GPIO_PIN_RESET);

	GPIO_PinState row0Value = HAL_GPIO_ReadPin(GPIO_BUS_ROW, GPIO_ROW0);
	GPIO_PinState row1Value = HAL_GPIO_ReadPin(GPIO_BUS_ROW, GPIO_ROW1);
	GPIO_PinState row2Value = HAL_GPIO_ReadPin(GPIO_BUS_ROW, GPIO_ROW2);
	GPIO_PinState row3Value = HAL_GPIO_ReadPin(GPIO_BUS_ROW, GPIO_ROW3);



}
